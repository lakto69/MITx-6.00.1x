0 0
00:00:00,000 --> 00:00:00.500
...

1
00:00:00,500 --> 00:00:03.590
Até agora, falamos sobre como lidar com exceções.

2
00:00:03,590 --> 00:00:05.175
Vimos um bom poder nisso.

3
00:00:05,175 --> 00:00:08.820
Que quando o Python lança uma exceção em vez de esbarrar

4
00:00:08,820 --> 00:00:11.629
nós até o nível superior, podemos dizer, nesse caso,

5
00:00:11,629 --> 00:00:12.670
Eu sei o que eu quero fazer.

6
00:00:12,670 --> 00:00:14.961
E eu posso escrever código para lidar com essa exceção.

7
00:00:14,961 --> 00:00:17.370
E vimos exemplos de como usar isso para criar poucos dados

8
00:00:17,370 --> 00:00:18.410
estruturas.

9
00:00:18,410 --> 00:00:19.829
Muito agradável.

10
00:00:19,829 --> 00:00:22.120
Na verdade, também podemos ir na outra direção,

11
00:00:22,120 --> 00:00:26.770
ou seja, poderíamos decidir quando criar uma exceção.

12
00:00:26,770 --> 00:00:29.760
Portanto, em vez de retornar valores especiais quando ocorrer um erro

13
00:00:29,760 --> 00:00:32.630
e depois verificando se esse valor de erro foi retornado,

14
00:00:32,630 --> 00:00:35.030
poderíamos dizer, quer saber?

15
00:00:35,030 --> 00:00:36.920
Eu quero levantar uma exceção quando

16
00:00:36,920 --> 00:00:39.380
Não consigo produzir um resultado consistente com o

17
00:00:39,380 --> 00:00:41.610
especificações da função.

18
00:00:41,610 --> 00:00:45.190
E para isso, temos, sem surpresa, outra palavra-chave

19
00:00:45,190 --> 00:00:46.400
chamado raise.

20
00:00:46,400 --> 00:00:48.410
E a ideia está dentro do código,

21
00:00:48,410 --> 00:00:52.749
Posso dizer que quero criar exceção usando essa palavra-chave raise.

22
00:00:52,749 --> 00:00:54.540
E eu vou dar o nome do erro

23
00:00:54,540 --> 00:00:56.250
que eu quero criar fazendo isso.

24
00:00:56,250 --> 00:00:58.872
Pode ser um erro que é uma exceção de erro existente.

25
00:00:58,872 --> 00:01:01.080
Pode ser que nós mesmos vamos criar.

26
00:01:01,080 --> 00:01:03.579
Mas normalmente, será uma exceção de erro existente.

27
00:01:03,579 --> 00:01:05.340
Portanto, neste caso, um erro de valor.

28.
00:01:05,340 --> 00:01:07.892
E então, uma mensagem que eu quero imprimir.

29
00:01:07,892 --> 00:01:09.350
E normalmente, isso é apenas uma string

30
00:01:09,350 --> 00:01:11.850
que eu quero ter isso me diz o que estava acontecendo.

31
00:01:11,850 --> 00:01:14.100
Felizmente, algo mais valioso do que apenas algo

32.
00:01:14,100 --> 00:01:14.599
está errado.

33
00:01:14,599 --> 00:01:15.990
Pode me dizer as especificidades que

34
00:01:15,990 --> 00:01:19.640
estavam acontecendo quando eu levantei essa exceção em particular.

35
00:01:19,640 --> 00:01:21.390
Isso agora está me colocando no controle

36.
00:01:21,390 --> 00:01:24.480
de decidir quando criar uma exceção

37.
00:01:24,480 --> 00:01:26.090
bem como agora me permitindo fazer o que

38.
00:01:26,090 --> 00:01:29.030
Eu fiz na parte anterior de como lidar com essa exceção quando

39.
00:01:29,030 --> 00:01:30.250
Eu chego lá.

40.
00:01:30,250 --> 00:01:33.730
Vejamos alguns exemplos.

41.
00:01:33,730 --> 00:01:37.870
Imagine que eu quero fazer uma lista de dois números.

42.
00:01:37,870 --> 00:01:40.260
E eu quero obter uma proporção dessas duas listas.

43
00:01:40,260 --> 00:01:42.775
Ou seja, cada lista que vou assumir tem o mesmo comprimento.

44
00:01:42,775 --> 00:01:44.900
E eu vou conseguir a proporção do primeiro elemento

45
00:01:44,900 --> 00:01:47.233
da primeira lista, o primeiro elemento da segunda lista,

46.
00:01:47,233 --> 00:01:48.034
e assim por diante.

47
00:01:48,034 --> 00:01:49.950
E eu tenho um pequeno pedaço de código aqui.

48.
00:01:49,950 --> 00:01:51.570
Ele tem um formulário como você pode esperar.

49.
00:01:51,570 --> 00:01:53.680
Vou montar uma lista da qual estou

50.
00:01:53,680 --> 00:01:56.800
vai gravar os resultados.

51
00:01:56,800 --> 00:01:59.500
Vou percorrer o comprimento da primeira lista

52
00:01:59,500 --> 00:02:02.020
com um pequeno índice indo de 0 a 1

53
00:02:02,020 --> 00:02:03.610
menos o comprimento da lista.

54
00:02:03,610 --> 00:02:05.860
E eu simplesmente vou tentar

55
00:02:05,860 --> 00:02:09.940
a proporção dessas duas coisas e colocá-lo

56.
00:02:09,940 --> 00:02:12.370
na coisa que estou tentando acumular.

57
00:02:12,370 --> 00:02:14.780
Então, eu estou tentando aqui.

58
00:02:14,780 --> 00:02:17.430
O que eu quero fazer é lidar com um par

59.
00:02:17,430 --> 00:02:18.400
de diferentes casos.

60
00:02:18,400 --> 00:02:20.750
Uma é: o que eu quero que aconteça

61
00:02:20,750 --> 00:02:23.466
se eu conseguir uma divisão por 0?

62
00:02:23,466 --> 00:02:26.997
E nesse caso, eu vou colocar algo aqui que é

63.
00:02:26,997 --> 00:02:27.830
não chamou um número.

64
00:02:27,830 --> 00:02:30.099
É uma coisa especial dentro do Python

65
00:02:30,099 --> 00:02:32.640
que vou inserir dizendo, não consigo retornar um número aqui

66.
00:02:32,640 --> 00:02:34.220
porque isso é infinito.

67
00:02:34,220 --> 00:02:36.880
Isso é apenas um manipulador de exceção padrão.

68
00:02:36,880 --> 00:02:39.050
Mas quando eu recebo mais alguma coisa, eu estou

69
00:02:39,050 --> 00:02:41.480
vai levantar uma exceção diferente que

70
00:02:41,480 --> 00:02:44.920
me diz que carreguei ratios com um argumento ruim.

71
00:02:44,920 --> 00:02:47.680
E finalmente, vou tentar retornar para ratios.

72
00:02:47,680 --> 00:02:50.790
Vamos ver o que acontece se realmente executarmos isso.

73
00:02:50,790 --> 00:02:53.290
Então, aqui está um exemplo de taxas de obtenção.

74
00:02:53,290 --> 00:02:54.910
Eu carreguei.

75
00:02:54,910 --> 00:02:58.570
E vamos dar algumas listas, eu vou dizer

76
00:02:58,570 --> 00:03:01.990
é a lista 1, 2, 3, 4.

77
00:03:01,990 --> 00:03:07.960
L2 é a lista 5, 6, 7, 8.

78
00:03:07,960 --> 00:03:10.200
E minhas desculpas.

79
00:03:10,200 --> 00:03:17.120
Eu farei isso de novo. L2 é a lista 5, 6, 7, 8.

80
00:03:17,120 --> 00:03:25.040
E se eu chamar get ratio em L1 e L2, ele faz o que eu espero.

81
00:03:25,040 --> 00:03:28.077
Isso me dá essas proporções e funcionou corretamente.

82
00:03:28,077 --> 00:03:29.160
Vamos definir outra lista.

83
00:03:29,160 --> 00:03:36.820
Vamos fazer com que L3 seja a lista apenas 5, 6, 7.

84
00:03:36,820 --> 00:03:47.940
Se eu chamar obter razões com, por exemplo, L1 e L3--

85
00:03:47,940 --> 00:03:49.180
oh bom

86
00:03:49,180 --> 00:03:52.250
Fez o que eu queria que fizesse.

87
00:03:52,250 --> 00:03:56.210
Em particular, gerou um erro porque estou tentando indexar

88
00:03:56,210 --> 00:03:57.770
além do comprimento de L2.

89
00:03:57,770 --> 00:03:59.260
É um pouco menor que o comprimento de L1.

90
00:03:59,260 --> 00:04:02.520
E observe aqui, estou indexando sobre o tamanho de L1.

91
00:04:02,520 --> 00:04:04.390
E fez exatamente o que eu queria.

92
00:04:04,390 --> 00:04:05.980
Isso gerou um erro de valor.

93
00:04:05,980 --> 00:04:07.526
Então isso me levou ao nível superior

94
00:04:07,526 --> 00:04:08.900
porque eu não tenho uma exceção

95
00:04:08,900 --> 00:04:10.200
manipulador para lidar com isso.

96
00:04:10,200 --> 00:04:11.925
Mas imprimiu minhas informações,

97
00:04:11,925 --> 00:04:13.300
não é a coisa padrão que faria

98
00:04:13,300 --> 00:04:17.399
aconteceu se eu não tivesse um manipulador específico lá.

99
00:04:17,399 --> 00:04:23.620
O último que eu quero fazer é dizer, vamos deixar L4 ser a lista

100
00:04:23,620 --> 00:04:27.240
5, 6, 7 e 0.

101
00:04:27,240 --> 00:04:34.150
E se eu conseguir proporções de L1 e L4, legal.

102
00:04:34,150 --> 00:04:36.990
Nesse caso, o manipulador de exceção entrou em ação.

103
00:04:36,990 --> 00:04:39.834
Porque neste caso, eu tenho um erro de divisão 0.

104
00:04:39,834 --> 00:04:41.250
E ao invés de jogar errado,

105
00:04:41,250 --> 00:04:44.600
Eu disse, basta substituir nesse símbolo especial, não um número,

106
00:04:44,600 --> 00:04:49.320
no lugar do lugar onde eu o colocaria.

107
00:04:49,320 --> 00:04:51.380
Mais uma vez, afaste-se do código por um segundo.

108
00:04:51,380 --> 00:04:54.800
O que estamos mostrando agora é que certamente posso lidar com exceções

109
00:04:54,800 --> 00:04:57.260
como eles surgem, mas eu também posso aumentar

110
00:04:57,260 --> 00:05:02.140
meu próprio tipo de mensagem de erro para diferentes tipos de erros

111
00:05:02,140 --> 00:05:02.740
como eles ocorrem.

112
00:05:02,740 --> 00:05:05.890
Nesse caso, quando recebi um erro de valor, fornecendo-me algo

113
00:05:05,890 --> 00:05:09.000
específico me dizendo onde eu estava quando isso aconteceu.

114
00:05:09,000 --> 00:05:11.880
Eu posso usar isso para controlar o fluxo.

115
00:05:11,880 --> 00:05:15.330
Vamos desenvolver essa ideia e ver um segundo exemplo.

116
00:05:15,330 --> 00:05:18.160
Então, como eu disse, estamos gerenciando o fluxo do programa

117
00:05:18,160 --> 00:05:20.920
levantando nosso próprio erro aqui.

118
00:05:20,920 --> 00:05:23.560
Vejamos um exemplo em que estendemos isso.

119
00:05:23,560 --> 00:05:26.420
Vamos supor que recebemos uma lista de turma para um assunto.

120
00:05:26,420 --> 00:05:28.560
E cada entrada é-- como fizemos na parte anterior,

121
00:05:28,560 --> 00:05:30.530
é uma lista de duas coisas.

122
00:05:30,530 --> 00:05:32.700
Uma lista do nome do aluno e uma lista

123
00:05:32,700 --> 00:05:34.430
de notas em uma tarefa.

124
00:05:34,430 --> 00:05:36.370
Várias notas para uma tarefa.

125
00:05:36,370 --> 00:05:39.040
Então, talvez eu tenha um pequeno exemplo aqui de notas de teste para Peter

126
00:05:39,040 --> 00:05:40.270
Parker e Bruce Wayne.

127
00:05:40,270 --> 00:05:43.180
E os dois estão indo muito bem nesta classe.

128
00:05:43,180 --> 00:05:46.420
O que eu gostaria de fazer é criar uma nova lista de turmas

129
00:05:46,420 --> 00:05:50.632
com um nome, notas e uma média.

130
00:05:50,632 --> 00:05:52.840
Qual é a média que eles estão fazendo até agora nisso?

131
00:05:52,840 --> 00:05:54.000
E você pode ver o tipo de saída

132
00:05:54,000 --> 00:05:56.624
Eu gostaria de chegar aqui, que Bruce Wayne está um pouco melhor

133
00:05:56,624 --> 00:05:57.530
do que Peter Parker.

134
00:05:57,530 --> 00:05:58.160
ESTÁ BEM.

135
00:05:58,160 --> 00:05:59.743
Escolha seu super-herói favorito e quais

136
00:05:59,743 --> 00:06:01.910
você quer ter um desempenho melhor do que alguém.

137
00:06:01,910 --> 00:06:04.020
Como eu faria isso?

138
00:06:04,020 --> 00:06:06.196
Mais uma vez, tentando usar a ideia, que

139
00:06:06,196 --> 00:06:07.820
vamos fazer em um segundo, de usar

140
00:06:07,820 --> 00:06:12.950
as exceções para lidar com a maneira como fluimos pelo programa.

141
00:06:12,950 --> 00:06:15.100
Aqui está um código que faria o simples

142
00:06:15,100 --> 00:06:17.150
maneira de fazê-lo.

143
00:06:17,150 --> 00:06:19.285
Uma pequena função chamada get_stats.

144
00:06:19,285 --> 00:06:20.910
Leva em uma lista e o que faz?

145
00:06:20,910 --> 00:06:22.230
Vai criar uma nova lista.

146
00:06:22,230 --> 00:06:24.740
E para cada elemento nessa lista original,

147
00:06:24,740 --> 00:06:28.190
Vou pegar uma lista do primeiro elemento,

148
00:06:28,190 --> 00:06:31.610
o segundo elemento e uma média do segundo elemento.

149
00:06:31,610 --> 00:06:33.480
E eu estou assumindo que estou inserindo coisas

150
00:06:33,480 --> 00:06:37.700
que têm uma lista de nomes e uma lista de notas.

151
00:06:37,700 --> 00:06:39.300
E vai calcular isso.

152
00:06:39,300 --> 00:06:42.940
Uma média, é claro, apenas pega esse último elemento,

153
00:06:42,940 --> 00:06:45.820
adiciona-os usando soma e divide-os

154
00:06:45,820 --> 00:06:48.050
pelo comprimento das notas.

155
00:06:48,050 --> 00:06:52.200
E se eu fizesse isso com um pequeno exemplo simples,

156
00:06:52,200 --> 00:06:56.830
aqui eu tenho uma implementação disso.

157
00:06:56,830 --> 00:07:05.240
E inicialmente vou zerar alguns exemplos disso

158
00:07:05,240 --> 00:07:06.990
para fazer uma versão simples, e então eu estou

159
00:07:06,990 --> 00:07:08.990
vai fazer uma versão um pouco mais complicada.

160
00:07:08,990 --> 00:07:12.520
Portanto, a versão simples é a que já temos.

161
00:07:12,520 --> 00:07:18.620
E se eu executar isso, e depois olhar para as notas de teste, que

162
00:07:18,620 --> 00:07:23.130
é onde eu pedi para colocar o resultado,

163
00:07:23,130 --> 00:07:25.980
Consigo o que queria inicialmente.

164
00:07:25,980 --> 00:07:27.090
Desculpe, isso é notas de teste.

165
00:07:27,090 --> 00:07:28.370
E agora vamos realmente executá-lo.

166
00:07:28,370 --> 00:07:32.040
Vou usar get_stats sobre as notas dos testes.

167
00:07:32,040 --> 00:07:36.360


168
00:07:36,360 --> 00:07:39.170
E eu recebo o tipo de desempenho que eu queria.

169
00:07:39,170 --> 00:07:40.230
Parece bom.

170
00:07:40,230 --> 00:07:41.580
ESTÁ BEM.

171
00:07:41,580 --> 00:07:45.380
Agora, o que eu quero fazer, no entanto, é olhar para um caso

172
00:07:45,380 --> 00:07:52.236
onde eu tenho algumas outras entradas aqui.

173
00:07:52,236 --> 00:07:53.360
Então, eu vou executar novamente.

174
00:07:53,360 --> 00:07:54.610
Vou recarregar este arquivo.

175
00:07:54,610 --> 00:07:57.230
Eu tenho notas de teste.

176
00:07:57,230 --> 00:08:00.472
Veja como são as notas dos testes.

177
00:08:00,472 --> 00:08:02.180
Tem o Capitão América com algumas notas

178
00:08:02,180 --> 00:08:05.490
e tem Deadpool sem notas ainda.

179
00:08:05,490 --> 00:08:16.410
E se eu pegar get_stats de test_grades -- ah,

180
00:08:16,410 --> 00:08:18.630
Eu recebo um erro de divisão por 0 .

181
00:08:18,630 --> 00:08:24.030
E isso faz sentido, porque nessa última entrada, o comprimento é 0.

182
00:08:24,030 --> 00:08:26.300
Estou tentando dividir por 0.

183
00:08:26,300 --> 00:08:28.660
O que eu poderia fazer para lidar com isso?

184
00:08:28,660 --> 00:08:30.390
Bem, como dissemos, se eu tivesse alguém

185
00:08:30,390 --> 00:08:32.150
onde eles não têm notas,

186
00:08:32,150 --> 00:08:35.330
Eu recebo esse erro porque tentei fazer essa divisão.

187
00:08:35,330 --> 00:08:37.730
Por que não penso em lidar com isso

188
00:08:37,730 --> 00:08:40.110
usando essa idéia de exceções?

189
00:08:40,110 --> 00:08:43.940
E assim, em particular, quero lidar com este caso.

190
00:08:43,940 --> 00:08:46.200
E aqui está o que eu poderia fazer.

191
00:08:46,200 --> 00:08:49.220
O primeiro é que eu poderia decidir apenas notificar

192
00:08:49,220 --> 00:08:52.760
o usuário que algo deu errado ao enviar uma mensagem.

193
00:08:52,760 --> 00:08:58.290
Então, eu vou mudar agora a média para tentar retornar isso.

194
00:08:58,290 --> 00:09:01.150
Mas se eu receber um erro de divisão 0, estou

195
00:09:01,150 --> 00:09:04.870
vai lidar com isso imprimindo alguns dados.

196
00:09:04,870 --> 00:09:06.870
E se eu for fazer isso, vou mudar agora

197
00:09:06,870 --> 00:09:09.820
minha definição de notas.

198
00:09:09,820 --> 00:09:10.840
De média, sim.

199
00:09:10,840 --> 00:09:14.830
Vou para se livrar dessa versão da média.

200
00:09:14,830 --> 00:09:18.080
E eu vou carregar esse arquivo.

201
00:09:18,080 --> 00:09:19.980
Agora, apenas verifique se eu tenho a coisa certa.

202
00:09:19,980 --> 00:09:22.450
Há notas de teste.

203
00:09:22,450 --> 00:09:23.430
E é a minha lista.

204
00:09:23,430 --> 00:09:36.200
E se eu souber, diga get_stats para test_grades - ótimo.

205
00:09:36,200 --> 00:09:37.766
Correu.

206
00:09:37,766 --> 00:09:38.890
Observe o que ele fez, no entanto.

207
00:09:38,890 --> 00:09:39.940
Tomou uma decisão.

208
00:09:39,940 --> 00:09:41.700
Então, primeiro de tudo, observe na impressão

209
00:09:41,700 --> 00:09:43.350
não imprimiu dados de notas.

210.
00:09:43,350 --> 00:09:45.040
Então isso me deu o aviso.

211
00:09:45,040 --> 00:09:48.030
Eu lidei com esse erro dizendo que é isso que eu quero fazer.

212
00:09:48,030 --> 00:09:51.080
Mas, neste caso, observe o que também aconteceu.

213
00:09:51,080 --> 00:09:56.530
Há o sinalizador para o erro, mas ele foi substituído em um valor.

214
00:09:56,530 --> 00:10:00.480
E o motivo foi que a média não retornou nada.

215
00:10:00,480 --> 00:10:05.400
Minha definição de média não tem retorno neste caso.

216
00:10:05,400 --> 00:10:08.430
E, como conseqüência, a chamada para a média

217
00:10:08,430 --> 00:10:11.560
devolve aquela coisa especial, o tipo None.

218
00:10:11,560 --> 00:10:15.986
E não inseriu None naquele local em Deadpool.

219
00:10:15,986 --> 00:10:17.360
Talvez eu gostaria de dizer que isso é

220
00:10:17,360 --> 00:10:18.776
a média de Deadpool, mas que

221
00:10:18,776 --> 00:10:20.750
não faz muito sentido.

222
00:10:20,750 --> 00:10:22.450
Como eu poderia lidar com isso?

223
00:10:22,450 --> 00:10:25.130
Bem, eu poderia decidir que vou dar

224
00:10:25,130 --> 00:10:27.560
um aluno sem notas a 0.

225
00:10:27,560 --> 00:10:29.550
Parece uma coisa razoável a se fazer.

226
00:10:29,550 --> 00:10:31.530
E agora eu posso mudar meu manipulador.

227
00:10:31,530 --> 00:10:34.320
Mais uma vez, capturando a ideia de erro de divisão 0,

228
00:10:34,320 --> 00:10:36.800
mas colocando em um retorno explícito.

229
00:10:36,800 --> 00:10:38.600
Isso diz que não apenas quero imprimir

230
00:10:38,600 --> 00:10:41.016
uma nota que diz que algo não correu como eu esperava

231
00:10:41,016 --> 00:10:44.910
, mas deixe-me devolver um valor que eu possa executar nele.

232
00:10:44,910 --> 00:10:47.300
Então agora vamos ver o que acontece quando fazemos isso.

233
00:10:47,300 --> 00:10:51.980
Então, eu vou remover esta versão da média

234
00:10:51,980 --> 00:10:55.980
e substitua-o por um que tenha o retorno dentro dele.

235
00:10:55,980 --> 00:10:59.490
E quando eu rodo isso, novamente, vamos verificar e ver

236
00:10:59,490 --> 00:11:00.990
estamos no lugar certo.

237
00:11:00,990 --> 00:11:04.350
Vamos garantir que as notas dos testes foram carregadas corretamente.

238
00:11:04,350 --> 00:11:05.550
E foi.

239
00:11:05,550 --> 00:11:12.450
E se agora eu obtiver estatísticas nas notas dos testes ... bom.

240
00:11:12,450 --> 00:11:14.864
Deadpool agora tem um 0.

241
00:11:14,864 --> 00:11:16.530
Não diz quão ruim ou bom Deadpool é,

242
00:11:16,530 --> 00:11:20.260
ele simplesmente não fez nenhum teste e não tem notas.

243
00:11:20,260 --> 00:11:24.150
E agora o que vemos aqui é que ainda sinalizamos o erro,

244
00:11:24,150 --> 00:11:26.780
mas mudamos o que é retornado para inserir algo

245
00:11:26,780 --> 00:11:28.640
isso faz mais sentido para a estrutura de dados

246
00:11:28,640 --> 00:11:30.290
Eu estou tentando construir.

247
00:11:30,290 --> 00:11:33.840
E assim podemos ver que podemos usar nossa capacidade de gerar erros,

248
00:11:33,840 --> 00:11:36.730
Mas lidar com erros, lidar com as coisas de uma maneira

249
00:11:36,730 --> 00:11:40.680
que queremos, em vez de simplesmente interromper a execução e bombear

250
00:11:40,680 --> 00:11:42.560
de volta ao usuário para tentar decidir

251
00:11:42,560 --> 00:11:45.010
como lidar com tudo isso.