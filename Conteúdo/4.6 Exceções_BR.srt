0 0
00:00:00,000 --> 00:00:00.590
...

1
00:00:00,590 --> 00:00:02.560
Até agora neste curso, você aprendeu

2
00:00:02,560 --> 00:00:04.750
muito sobre como programar.

3
00:00:04,750 --> 00:00:06.230
Você aprendeu sobre estruturas de dados.

4
00:00:06,230 --> 00:00:08.150
Você aprendeu sobre procedimentos de escrita

5
00:00:08,150 --> 00:00:09.870
que realizam coisas, incluindo

6
00:00:09,870 --> 00:00:11.290
fazê-los de maneiras diferentes.

7
00:00:11,290 --> 00:00:12.790
E você começou a ter a capacidade

8
00:00:12,790 --> 00:00:15.150
escrever código bastante complicado.

9
00:00:15,150 --> 00:00:17.920
E você também, sem dúvida, experimentou

10
00:00:17,920 --> 00:00:19.930
isso que leva a erros.

11
00:00:19,930 --> 00:00:21.680
E então nós conversamos um pouco sobre como

12
00:00:21,680 --> 00:00:23.790
pensar em testar e depurar,

13
00:00:23,790 --> 00:00:26.790
para obter seu código para fazer o que você queria.

14
00:00:26,790 --> 00:00:29.040
E nessa discussão, conversamos sobre coisas

15
00:00:29,040 --> 00:00:31.110
como programação defensiva, definindo coisas

16
00:00:31,110 --> 00:00:34.470
para que você planeje com antecedência tentar impedir o código ou pelo menos

17
00:00:34,470 --> 00:00:36.500
evitar bugs, ou pelo menos ter

18
00:00:36,500 --> 00:00:39.720
eles surgem de uma maneira em que você pode lidar bem com eles.

19
00:00:39,720 --> 00:00:41.740
E nós conversamos sobre os tipos de mensagens

20
00:00:41,740 --> 00:00:43.410
que o computador fornece quando as coisas

21
00:00:43,410 --> 00:00:45.381
não siga o caminho que você espera.

22
00:00:45,381 --> 00:00:47.630
Hoje, vamos abordar esses dois tópicos,

23
00:00:47,630 --> 00:00:49.600
para falar sobre o uso de exceções

24
00:00:49,600 --> 00:00:51.870
eo uso de asserções, tanto para realizar

25
00:00:51,870 --> 00:00:54.310
programação defensiva e deixá-lo realmente

26
00:00:54,310 --> 00:00:57.470
controlar como o computador reage quando algo

27
00:00:57,470 --> 00:00:59.530
vai de uma maneira inesperada.

28.
00:00:59,530 --> 00:01:02.820
Então, vamos olhar para isso.

29
00:01:02,820 --> 00:01:05.760
Exceções realmente lidam com essa pergunta

30
00:01:05,760 --> 00:01:09.000
do que acontece quando estou executando um procedimento e algo

31
00:01:09,000 --> 00:01:10.300
acontece que eu não esperava.

32.
00:01:10,300 --> 00:01:12.680
Eu atingi uma condição inesperada.

33
00:01:12,680 --> 00:01:14.730
É uma exceção ao que planejamos,

34
00:01:14,730 --> 00:01:16.420
o que queríamos que acontecesse.

35
00:01:16,420 --> 00:01:19.010
E o que já vimos é que você receberá uma exceção

36.
00:01:19,010 --> 00:01:21.580
para o que era esperado e que levará tipicamente

37.
00:01:21,580 --> 00:01:24.580
para uma mensagem do Python.

38.
00:01:24,580 --> 00:01:26.974
Alguns exemplos:você tem uma lista

39.
00:01:26,974 --> 00:01:29.640
e você tenta acessar algo além do comprimento dessa lista.

40.
00:01:29,640 --> 00:01:31.600
Um pequeno exemplo aqui.

41.
00:01:31,600 --> 00:01:33.770
Eu tenho uma lista de comprimento 3.

42.
00:01:33,770 --> 00:01:35.807
Eu tento acessar o quarto ponto,

43
00:01:35,807 --> 00:01:38.140
e recebo uma pequena mensagem dizendo que tenho um erro de índice.

44
00:01:38,140 --> 00:01:40.654
Está me dizendo que tentei ir longe demais.

45
00:01:40,654 --> 00:01:42.570
Eu poderia ter algo em que tento converter

46.
00:01:42,570 --> 00:01:43.800
um tipo inadequado.

47
00:01:43,800 --> 00:01:45.230
Eu recebo um erro de tipo.

48.
00:01:45,230 --> 00:01:47.340
Eu tento referenciar uma variável.

49.
00:01:47,340 --> 00:01:50.020
Obtenha o valor para uma variável, mas ainda não o defini.

50.
00:01:50,020 --> 00:01:51.520
Eu tenho um erro de nome.

51
00:01:51,520 --> 00:01:54.470
Eu tento misturar tipos sem forçar

52
00:01:54,470 --> 00:01:57.170
um ou coagindo um a ser do tipo apropriado.

53
00:01:57,170 --> 00:01:58.510
E eu recebo um erro de tipo.

54
00:01:58,510 --> 00:02:02.980
Estes são exemplos de uma exceção ao que era esperado.

55
00:02:02,980 --> 00:02:05.210
Estes são da perspectiva do Python.

56.
00:02:05,210 --> 00:02:07.750
Então, o que faremos com essas coisas?

57
00:02:07,750 --> 00:02:11.020
Bem, antes de falarmos sobre isso, vamos pensar em alguns

58
00:02:11,020 --> 00:02:12.600
dos outros tipos de erros comuns

59.
00:02:12,600 --> 00:02:14.760
você provavelmente já viu aqui.

60
00:02:14,760 --> 00:02:16.240
Erro de sintaxe.

61
00:02:16,240 --> 00:02:17.730
Python não pode analisar o programa.

62
00:02:17,730 --> 00:02:21.340
Não satisfaz as regras de escrever expressões legais.

63.
00:02:21,340 --> 00:02:22.540
Um erro de nome.

64
00:02:22,540 --> 00:02:26.290
Um nome local ou global não foi encontrado pelo Python.

65
00:02:26,290 --> 00:02:27.300
Um erro de atributo.

66.
00:02:27,300 --> 00:02:30.540
Quando eu apresentar uma aula, que faremos em breve,

67
00:02:30,540 --> 00:02:33.850
ou quando eu realmente tento acessar um Python existente

68
00:02:33,850 --> 00:02:36.420